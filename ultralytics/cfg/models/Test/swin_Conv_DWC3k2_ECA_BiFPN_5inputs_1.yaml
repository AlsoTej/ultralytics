nc: 2
scales:
  s: [0.33, 0.25, 1024] 
  
backbone:
  - [-1, 1, nn.Identity, []] #0  
  # Swin track
  - [0, 1, TorchVision, [768, swin_t, DEFAULT, True, 4, True]] #1
  - [-1, 1, Index, [192 ,4]] #2
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #3 (1, 192, 80, 80) multiscale 1  
  - [1, 1, Index, [384, 6]] #4
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #5 (1, 384, 40, 40) multiscale 2 
  - [1, 1, Index, [768, 9]] #6 
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #7 (1, 768, 20, 20)
  - [-1, 1, SPPF, [768, 5]] #8 multiscale 3

    # CNN
  - [0, 1, Conv, [64, 3, 2]] # 9 (1, 64, 320, 320) - (16)
  - [-1, 1, Conv, [128, 3, 2]] # 10 (1, 128, 160, 160) - (32)
  - [-1, 2, DWC3k2_Attn, [256, False, 0.25]] # 11 (1, 256, 80, 80) - (64)
  - [-1, 1, Conv, [256, 3, 2]] # 12 (1, 256, 80, 80) - (64) - multiscale 1
  - [-1, 2, DWC3k2_Attn, [512, False, 0.25]] #13 (1, 512, 40, 40) - (128)
  - [-1, 1, Conv, [512, 3, 2]] # 14 (1, 512, 40, 40) - (128)
  - [-1, 2, DWC3k2_Attn, [512, True]] #15 (1, 512, 40, 40) - (128) - multiscale 2
  - [-1, 1, Conv, [1024, 3, 2]] # 16 (1, 1024, 20, 20) - (256)
  - [-1, 2, DWC3k2_Attn, [1024, True]] #17 (1, 1024, 20, 20) - (256)
  - [-1, 1, SPPF, [1024, 5]] #18 multisclae 3
    
  #Concat
  - [[3, 12], 1, Concat, [1]] # 19 (1, 448, 80, 80)  (256)
  - [-1, 1, ECA, []]  #20
  - [-1, 1, Conv, [512, 3, 1]] #21
  
  - [[5, 15], 1, Concat, [1]] # 22 (1, 896, 40, 40) (512)
  - [-1, 1, ECA, []] #23
  - [-1, 1, Conv, [512, 3, 1]] #24

  - [[8, 18], 1, Concat, [1]] #25 (1, 1792, 20, 20) (1024)
  - [-1, 1, ECA, []]  #26
  - [-1, 1, Conv, [512, 3, 1]] #27

head:
############################################################################################BLOCK 1
    # P6 from P5
  - [25, 1, Conv, [512,3,2]]          # 28 (1, 512, 10, 10)
  
    # Generate P7 from P6 (ReLU + Downsampling)
  - [26, 1, Conv, [512, 3, 2]]        # 29 (1, 512, 5, 5)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #30 Upsample A -> (1, 512, 10, 10)
  - [[-1, 26], 1, BiFPN_Concat2, [1]]          #31(1, 512, 10, 10)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #32 (1, 512, 10, 10)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #33 Upsample -> (1, 512, 20, 20)
  - [[-1, 25], 1, BiFPN_Concat2, [1]]          #34 (1, 512, 20, 20)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #35 (1, 512, 20, 20)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #36 Upsample -> (1, 512, 40, 40)
  - [[-1, 22], 1, BiFPN_Concat2, [1]]          #37 (1, 512, 40, 40)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]    #38 (1, 512, 40, 40)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #39 Upsample -> (1, 512, 80, 80)
  - [[-1, 19], 1, BiFPN_Concat2, [1]]          #40 (1, 512, 80, 80)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]] #41 (1, 512, 80, 80)

  - [-1, 1, Conv, [512, 3, 2]]               #42 Downsample ->(1, 512, 40, 40)
  - [[-1, 36, 22],1, BiFPN_Concat3, [1]]       #43 (1, 512, 40, 40)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]] #44 (1, 512, 40, 40)

  - [-1, 1, Conv, [512, 3, 2]]               #45 (1, 512, 20, 20)
  - [[-1, 33, 25], 1, BiFPN_Concat3, [1]]      #46 (1, 512, 20, 20)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]                  #47 (1, 512, 20, 20)

  - [-1, 1, Conv, [512, 3, 2]]               #48 (1, 512, 10, 10)
  - [[-1, 30, 26], 1, BiFPN_Concat3, [1]]      #49 (1, 512, 10, 10)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]] #50 (1, 512, 10, 10)

  - [-1, 1, Conv, [512, 3, 2]]               #51 (1, 512, 5, 5)
  - [[-1, 27], 1, BiFPN_Concat2, [1]]          #52 (1, 512, 5, 5)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]] #53 (1, 512, 5, 5)

# # #########################################################################################BLOCK2
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #54 Upsample A -> (1, 512, 10, 10)
  - [[-1, 48], 1, BiFPN_Concat2, [1]]          #55 (1, 512, 10, 10)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #56 (1, 512, 10, 10)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #57 Upsample -> (1, 512, 20, 20)
  - [[-1, 45], 1, BiFPN_Concat2, [1]]          #58 (1, 512, 20, 20)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #59 (1, 512, 20, 20)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #60 Upsample -> (1, 512, 40, 40)
  - [[-1, 42], 1, BiFPN_Concat2, [1]]          #61 (1, 512, 40, 40)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #62 (1, 512, 40, 40)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #63 Upsample -> (1, 512, 80, 80)
  - [[-1, 39], 1, BiFPN_Concat2, [1]]          #64 (1, 512, 80, 80)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #65 (1, 512, 80, 80)

  - [-1, 1, Conv, [512, 3, 2]]              #66 Downsample ->(1, 512, 40, 40)
  - [[-1, 60, 42],1, BiFPN_Concat3, [1]]      #67 (1, 512, 40, 40)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #68 (1, 512, 40, 40)

  - [-1, 1, Conv, [512, 3, 2]]              #69 (1, 512, 20, 20)
  - [[-1, 57, 45], 1, BiFPN_Concat3, [1]]     #70 (1, 512, 20, 20)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #71 (1, 512, 20, 20)

  - [-1, 1, Conv, [512, 3, 2]]              #72 (1, 512, 10, 10)
  - [[-1, 54, 48], 1, BiFPN_Concat3, [1]]     #73 (1, 512, 10, 10)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #74 (1, 512, 10, 10)

  - [-1, 1, Conv, [512, 3, 2]]              #75 (1, 512, 5, 5)
  - [[-1, 51], 1, BiFPN_Concat2, [1]]         #76 (1, 512, 5, 5)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #77 (1, 512, 5, 5)
# ##########################################################################################BLOCK3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #78 Upsample A -> (1, 512, 10, 10)
  - [[-1, 72], 1, BiFPN_Concat2, [1]]          #79 (1, 512, 10, 10)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #80 (1, 512, 10, 10)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #81 Upsample -> (1, 512, 20, 20)
  - [[-1, 69], 1, BiFPN_Concat2, [1]]          #82 (1, 512, 20, 20)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #81=3 (1, 512, 20, 20)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #84 Upsample -> (1, 512, 40, 40)
  - [[-1, 66], 1, BiFPN_Concat2, [1]]          #85 (1, 512, 40, 40)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #86 (1, 512, 40, 40)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #87 Upsample -> (1, 512, 80, 80)
  - [[-1, 63], 1, BiFPN_Concat2, [1]]          #88 (1, 512, 80, 80)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]   #89 (1, 512, 80, 80)

  - [-1, 1, Conv, [512, 3, 2]]              #90 Downsample ->(1, 512, 40, 40)
  - [[-1, 84, 66],1, BiFPN_Concat3, [1]]      #91 (1, 512, 40, 40)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #92 (1, 512, 40, 40)

  - [-1, 1, Conv, [512, 3, 2]]              #93 (1, 512, 20, 20)
  - [[-1, 81, 69], 1, BiFPN_Concat3, [1]]     #94 (1, 512, 20, 20)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #95 (1, 512, 20, 20)

  - [-1, 1, Conv, [512, 3, 2]]              #96 (1, 512, 10, 10)
  - [[-1, 78, 72], 1, BiFPN_Concat3, [1]]     #97 (1, 512, 10, 10)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #98 (1, 512, 10, 10)

  - [-1, 1, Conv, [512, 3, 2]]              #99 (1, 512, 5, 5)
  - [[-1, 75], 1, BiFPN_Concat2, [1]]         #100 (1, 512, 5, 5)
  - [-1, 1, DWC3k2_Attn, [512, 512, 1, True, 0.5, 1, True]]  #101 (1, 512, 5, 5)

  
  # - [53, 1, C3k2, [512, True]] #57
  # - [56, 1, C3k2, [1024, True]] #58

  - [[89, 92, 95, 98, 101], 1, Detect, [nc]] # 102
