
nc: 2
scales:
  s: [0.33, 0.25, 1024] 
  
backbone:
  - [-1, 1, nn.Identity, []] #0  
  # Swin track
  - [0, 1, TorchVision, [768, swin_t, DEFAULT, True, 4, True]] #1
  - [-1, 1, Index, [192 ,4]] #2
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #3 (1, 192, 80, 80) multiscale 1  
  - [1, 1, Index, [384, 6]] #4
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #5 (1, 384, 40, 40) multiscale 2 
  - [1, 1, Index, [768, 9]] #6 
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #7 (1, 768, 20, 20)
  - [-1, 1, SPPF, [768, 5]] #8 multiscale 3

    # CNN
  - [0, 1, Conv, [64, 3, 2]] # 9 (1, 64, 320, 320) - (16)
  - [-1, 1, Conv, [128, 3, 2]] # 10 (1, 128, 160, 160) - (32)
  - [-1, 2, DWC3k2, [256, False, 0.25]] # 11 (1, 256, 80, 80) - (64)
  - [-1, 1, Conv, [256, 3, 2]] # 12 (1, 256, 80, 80) - (64) - multiscale 1
  - [-1, 2, DWC3k2, [512, False, 0.25]] #13 (1, 512, 40, 40) - (128)
  - [-1, 1, Conv, [512, 3, 2]] # 14 (1, 512, 40, 40) - (128)
  - [-1, 2, DWC3k2_Attn, [512, True]] #15 (1, 512, 40, 40) - (128) - multiscale 2
  - [-1, 1, Conv, [1024, 3, 2]] # 16 (1, 1024, 20, 20) - (256)
  - [-1, 2, DWC3k2_Attn, [1024, True]] #17 (1, 1024, 20, 20) - (256)
  - [-1, 1, SPPF, [1024, 5]] #18 multisclae 3
    
  #Concat
  - [[3, 12], 1, Concat, [1]] # 19 (1, 448, 80, 80)  (256)
  - [-1, 1, ECA, []]  #20
  
  - [[5, 15], 1, Concat, [1]] # 21 (1, 896, 40, 40) (512)
  - [-1, 1, ECA, []] #22

  - [[8, 18], 1, Concat, [1]] #23 (1, 1792, 20, 20) (1024)
  - [-1, 1, ECA, []]  #24

head:
  - [[20, 22, 24], 1, BiFPN, [256, 2]]   # 25: BiFPN, outputs [p3_out, p4_out, p5_out, p6_out, p7_out]
  - [10, 1, Select, [0]]                 # 26: Select p3_out (index 0 from BiFPN output)
  - [10, 1, Select, [1]]              # 27: Select p4_out (index 1 from BiFPN output)
  - [10, 1, Select, [2]]              # 28: Select p5_out (index 2 from BiFPN output)
  - [10, 1, Select, [3]]              # 29: Select p6_out (index 2 from BiFPN output)
  - [10, 1, Select, [4]]              # 30: Select p7_out (index 2 from BiFPN output)
  - [[26, 27, 28, 29, 30], 1, Detect, [nc]]  # Detect head using p3_out, p4_out, p5_out
