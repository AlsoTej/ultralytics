nc: 2
scales:
  s: [1.0, 1.0, 1792]
backbone:
  - [-1, 1, nn.Identity, []] #0

  # #CNN
  # - [0, 1, TorchVision, [768, "convnext_tiny", "DEFAULT", True, 2, True]]  # - 1
  # - [-1, 1, Index, [192, 4]]  #  (1, 192, 80, 80) - 2
  # - [1, 1, Index, [512, 6]]  # (1, 512, 40, 40) - 3
  # - [1, 1, Index, [768, 8]]  #  (1, 768, 20, 20) - 4

  # #YOLO11-backbone
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2Ghost, [256, 256, 2, False, 0.25, 1]]  # Add '1' for groups
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2Ghost, [512, 512, 2, False, 0.25, 1]]  # Add '1' for groups
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2Ghost, [512, 512, 2, True, 1]]  # Add '1' for groups
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2Ghost, [1024, 1024, 2, True, 1]]  # Add '1' for groups
  # - [-1, 1, SPPF, [1024, 5]]          # 10 (1, 1024, 20, 20)
  # - [-1, 2, C2PSA, [1024]]            # 11 (1, 1024, 20, 20)

  

  # [from, repeats, module, args]
  #YOLO12-backbone
  # - [0, 1, Conv, [64, 3, 2]]         # 1 (1, 16, 320, 320)
  # - [-1, 1, Conv, [128, 3, 2]]        # 2 (1, 32, 160, 160)
  # - [-1, 1, C3k2, [512, False, 0.25]] # 3 (1, 64, 160, 160)
  # - [-1, 1, Conv, [512, 3, 2]]        # 4 (1, 64, 80, 80)
  # - [-1, 1, C3k2, [512, False, 0.25]] # 5 (1, 128, 80, 80)
  # - [-1, 1, Conv, [512, 3, 2]]        # 6 (1, 128, 40, 40)
  # - [-1, 1, A2C2f, [512, True, 4]]     # 7 (1, 128, 40, 40)
  # - [-1, 1, Conv, [1024, 3, 2]]       # 8 (1, 512, 20, 20)
  # - [-1, 1, A2C2f, [1024, True, 1]]    # 9 (1, 512, 20, 20)

  
  # Swin track
  - [0, 1, TorchVision, [768, "swin_t", "DEFAULT", True, 4, True]] #10
  - [-1, 1, Index, [192 ,4]]                         #11
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #12 (1, 192, 80, 80)
  - [10, 1, Index, [384, 6]]                          #13
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #14 (1, 384, 40, 40)
  - [10, 1, Index, [768, 9]]                          #15
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #16 (1, 768, 20, 20)

  #concat
  - [[5, 12], 1, Concat, [1]]                        # 17 (1, 704, 80, 80)
  - [-1, 1, EMA, [704]]                             # 18 (1, 704, 80, 80)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]        # 19 (1, 512, 80, 80) E - make channels same C3/P3
  
  - [[7, 14], 1, Concat, [1]]                        # 20 (1, 896, 40, 40)
  - [-1, 1, EMA, [896]]                             # 21 (1, 896, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]        # 22 (1, 512, 40, 40) D - make channels same C4/P4
  
  - [[9, 16], 1, Concat, [1]]                       # 23 (1, 1792, 20, 20)
  - [-1, 1, EMA, [1792]]                            # 24 (1, 1792, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]        # 25 (1, 512, 20, 20) C - make channels same C5/P5

head:
############################################################################################BLOCK 1
    # P6 from P5
  - [25, 1, DepthwiseConvBlock, [512,3,2]]          # 26 (1, 512, 10, 10)
  
    # Generate P7 from P6 (ReLU + Downsampling)
  - [26, 1, DepthwiseConvBlock, [512, 3, 2]]        # 27 (1, 512, 5, 5)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #28 Upsample A -> (1, 512, 10, 10)
  - [[-1, 26], 1, BiFPN_Concat2, [1]]          #29(1, 512, 10, 10)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #30 (1, 512, 10, 10)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #31 Upsample -> (1, 512, 20, 20)
  - [[-1, 25], 1, BiFPN_Concat2, [1]]          #32 (1, 512, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #33 (1, 512, 20, 20)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #34 Upsample -> (1, 512, 40, 40)
  - [[-1, 22], 1, BiFPN_Concat2, [1]]          #35 (1, 512, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #36 (1, 512, 40, 40)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #37 Upsample -> (1, 512, 80, 80)
  - [[-1, 19], 1, BiFPN_Concat2, [1]]          #38 (1, 512, 80, 80)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #39 (1, 512, 80, 80)

  - [-1, 1, DWConv, [512, 3, 2]]               #40 Downsample ->(1, 512, 40, 40)
  - [[-1, 36, 22],1, BiFPN_Concat3, [1]]       #41 (1, 512, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #42 (1, 512, 40, 40)

  - [-1, 1, DWConv, [512, 3, 2]]               #43 (1, 512, 20, 20)
  - [[-1, 33, 25], 1, BiFPN_Concat3, [1]]      #44 (1, 512, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #45 (1, 512, 20, 20)

  - [-1, 1, DWConv, [512, 3, 2]]               #46 (1, 512, 10, 10)
  - [[-1, 30, 26], 1, BiFPN_Concat3, [1]]      #47 (1, 512, 10, 10)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #48 (1, 512, 10, 10)

  - [-1, 1, DWConv, [512, 3, 2]]               #49 (1, 512, 5, 5)
  - [[-1, 27], 1, BiFPN_Concat2, [1]]          #50 (1, 512, 5, 5)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #51 (1, 512, 5, 5)
# # #########################################################################################BLOCK2
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #52 Upsample A -> (1, 512, 10, 10)
  - [[-1, 48], 1, BiFPN_Concat2, [1]]          #53 (1, 512, 10, 10)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #54 (1, 512, 10, 10)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #55 Upsample -> (1, 512, 20, 20)
  - [[-1, 45], 1, BiFPN_Concat2, [1]]          #56 (1, 512, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #57 (1, 512, 20, 20)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #58 Upsample -> (1, 512, 40, 40)
  - [[-1, 42], 1, BiFPN_Concat2, [1]]          #59 (1, 512, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #60 (1, 512, 40, 40)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #61 Upsample -> (1, 512, 80, 80)
  - [[-1, 39], 1, BiFPN_Concat2, [1]]          #62 (1, 512, 80, 80)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #63 (1, 512, 80, 80)

  - [-1, 1, DWConv, [512, 3, 2]]              #64 Downsample ->(1, 512, 40, 40)
  - [[-1, 60, 42],1, BiFPN_Concat3, [1]]      #65 (1, 512, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #66 (1, 512, 40, 40)

  - [-1, 1, DWConv, [512, 3, 2]]              #67 (1, 512, 20, 20)
  - [[-1, 57, 45], 1, BiFPN_Concat3, [1]]     #68 (1, 512, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #69 (1, 512, 20, 20)

  - [-1, 1, DWConv, [512, 3, 2]]              #70 (1, 512, 10, 10)
  - [[-1, 54, 48], 1, BiFPN_Concat3, [1]]     #71 (1, 512, 10, 10)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #72 (1, 512, 10, 10)

  - [-1, 1, DWConv, [512, 3, 2]]              #73 (1, 512, 5, 5)
  - [[-1, 51], 1, BiFPN_Concat2, [1]]         #74 (1, 512, 5, 5)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #75 (1, 512, 5, 5)
# ##########################################################################################BLOCK3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #76 Upsample A -> (1, 512, 10, 10)
  - [[-1, 72], 1, BiFPN_Concat2, [1]]          #77 (1, 512, 10, 10)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #78 (1, 512, 10, 10)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #79 Upsample -> (1, 512, 20, 20)
  - [[-1, 69], 1, BiFPN_Concat2, [1]]          #80 (1, 512, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #81 (1, 512, 20, 20)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #82 Upsample -> (1, 512, 40, 40)
  - [[-1, 66], 1, BiFPN_Concat2, [1]]          #83 (1, 512, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #84 (1, 512, 40, 40)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #85 Upsample -> (1, 512, 80, 80)
  - [[-1, 63], 1, BiFPN_Concat2, [1]]          #86 (1, 512, 80, 80)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]   #87 (1, 512, 80, 80)

  - [-1, 1, DWConv, [512, 3, 2]]              #88 Downsample ->(1, 512, 40, 40)
  - [[-1, 84, 66],1, BiFPN_Concat3, [1]]      #89 (1, 512, 40, 40)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #90 (1, 512, 40, 40)

  - [-1, 1, DWConv, [512, 3, 2]]              #91 (1, 512, 20, 20)
  - [[-1, 81, 69], 1, BiFPN_Concat3, [1]]     #92 (1, 512, 20, 20)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #93 (1, 512, 20, 20)

  - [-1, 1, DWConv, [512, 3, 2]]              #94 (1, 512, 10, 10)
  - [[-1, 78, 72], 1, BiFPN_Concat3, [1]]     #95 (1, 512, 10, 10)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #96 (1, 512, 10, 10)

  - [-1, 1, DWConv, [512, 3, 2]]              #97 (1, 512, 5, 5)
  - [[-1, 75], 1, BiFPN_Concat2, [1]]         #98 (1, 512, 5, 5)
  - [-1, 1, DepthwiseConvBlock, [512, 3, 1]]  #99 (1, 512, 5, 5)

  
  # - [53, 1, C3k2, [512, True]] #57
  # - [56, 1, C3k2, [1024, True]] #58

  - [[87, 90, 93, 96, 99], 1, RTDETRDecoder, [nc]]  # Pass P3, P4, P5, P6, P7 to Detect head (index 32) 25
