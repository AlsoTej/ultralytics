# # Model Parameters
# nc: 2
# strides: [8, 16, 32]  # Output strides
# scales:
#   # [depth, width, max_channels]
#   n: [0.33, 0.25, 1024]
#   s: [0.33, 0.50, 1024]
#   m: [0.67, 0.75, 768]
#   l: [1.00, 1.00, 512]
#   x: [1.00, 1.25, 512]

# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, TorchVision, [1280, efficientnet_b3, DEFAULT, True, 0, True]]  # 0 EfficientNetB3, unwrapped, no truncate, split

#   # Extract feature maps at different scales
#   # EfficientNetB3 structure (approximate, based on typical torchvision output):
#   #  - Stage 2:  (..., 32, H/4, W/4)   <- Not used, too early
#   #  - Stage 3:  (..., 48, H/8, W/8)   <- P3
#   #  - Stage 4:  (..., 88, H/16, W/16)  <- P4
#   #  - Stage 5:  (..., 248, H/32, W/32) <- P5  (before the last few layers)
#   #  - Stage 6:  (..., 1536, H/32, W/32) <- Use this after SPPF

#   - [0, 1, Index, [2]]                                                  # 1 - P3/8  (B, H/8, W/8, 48)
#   - [0, 1, Index, [3]]                                                  # 2 - P4/16 (B, H/16, W/16, 88)
#   - [0, 1, Index, [4]]                                                  # 3 - P5/32 (B, H/32, W/32, 248)
#   - [-1, 1, SPPF, [248, 5]]                                               # 4 - P5/32 (B, 248, H/32, W/32)

# head:
#   # [from, repeats, module, args]

#   # --- FPN (Top-Down) Pathway ---
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 5 - (B, 248, H/16, W/16)
#   - [[-1, 2], 1, Concat, [1]]                 # 6 - (B, 248+88, H/16, W/16) = (B, 336, H/16, W/16)
#   - [-1, 3, C2f, [88, True]]                  # 7 - (B, 88, H/16, W/16)  FPN P4

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 8 - (B, 88, H/8, W/8)
#   - [[-1, 1], 1, Concat, [1]]                 # 9 - (B, 88+48, H/8, W/8) = (B, 136, H/8, W/8)
#   - [-1, 3, C2f, [48, True]]                   # 10 - (B, 48, H/8, W/8) FPN P3

#   # --- PANet (Bottom-Up) Pathway ---
#   - [-1, 1, Conv, [48, 3, 2]]                   # 11 - (B, 48, H/16, W/16) Downsample P3
#   - [[-1, 7], 1, Concat, [1]]                  # 12 - (B, 48+88, H/16, W/16) = (B, 136, H/16, W/16)
#   - [-1, 3, C2f, [88, True]]                  # 13 - (B, 88, H/16, W/16) PANet P4

#   - [-1, 1, Conv, [88, 3, 2]]                  # 14 - (B, 88, H/32, W/32) Downsample P4
#   - [[-1, 4], 1, Concat, [1]]                  # 15 - (B, 88+248, H/32, W/32) = (B, 336, H/32, W/32)
#   - [-1, 3, C2f, [248, True]]                  # 16 - (B, 248, H/32, W/32) PANet P5

#   # --- Detection Head ---
#   - [[10, 13, 16], 1, Detect, [nc]]              # 17 - Detect(P3, P4, P5)

nc: 1
backbone:
  - [-1, 1, TorchVision, [768, "convnext_tiny", "DEFAULT", True, 2, False]]
head:
  - [-1, 1, nn.Identity, []]
